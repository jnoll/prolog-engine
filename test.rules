%% -*- Prolog -*-
%% Rules for unit tests.

foo(bar).

rule jimtest:
[
	jim
]
==>
[
	recommend(im_here_jim)
].

%% Don't change these, else the unit tests will break.
rule a: 
[
	annoying(X), 
	color(orange, X)
] 
==> 
[
	assert(isa(orange, X)),
	recommend(avoid(X))
].

% GTD rules.
rule doit: 
[
	actionable(X),
	effort(X) =< 2,
	steps(X) == 1
]
==>
[	
	recommend(do(X)) 
].

rule deferit: 
[
	actionable(X),
	effort(X) > 2,
	steps(X) == 1
]
==>
[	
	recommend(defer(X))	
].


rule project:
[
	actionable(X),
	steps(X) > 1
]
==>
[	
	recommend(determine_successful_outcome(X))
].

rule test_load_action:
[ test_perform_load2 ] ==> [ load('load_test2.rules') ].
